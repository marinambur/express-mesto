{"version":3,"sources":["images/crest.svg","images/logo.svg","images/plus.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","utils/Api.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","Footer","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","key","id","type","onClick","onCardDelete","onCardCick","data-name","link","name","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","plus","cards","map","onCardClick","PopupWithForm","isOpen","cross","close","title","children","onSubmit","ImagePopup","onClose","image","EditAvatarPopup","avatarRef","useRef","useEffect","current","value","buttonText","e","preventDefault","onUpdateAvatar","method","action","ref","required","placeholder","EditProfilePopup","useState","setName","description","setDescription","onUpdateUser","noValidate","pattern","minLength","maxLength","onChange","target","AddPlacePopup","inputName","inputLink","onUpdatePlace","defaultValue","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","userName","userJob","body","JSON","stringify","cardName","cardLink","cardId","statusText","data","userAvatar","authorization","App","setCurrentUser","setCards","all","getUserInfo","getInitialCards","user","catch","err","console","log","dataImage","setDataImage","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","Provider","deleteLike","newCard","newCards","c","putLike","deleteCard","filter","setUserAvatar","updatedUserData","updateUserInfo","addNewCard","newCardData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.71625abc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crest.5df32a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.b2fce4ac.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <a className=\"header__container\" href=\"#\"\n            ><img\n                className=\"header__logo\"\n                src={logo}\n                alt=\"Логотип Россия\"\n            />\n            </a>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Marina Kuznetsova</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\n\nfunction Card(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const isOwn = props.card.owner._id === currentUser._id;\n\n    function handleClick() {\n        props.onCardCick(props.card)\n    }\n\n    function handleLikeClick() {\n        props.onCardLike(props.card)\n    }\n\n    function handleCardDelete() {\n        props.onCardDelete(props.card)\n    }\n\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n    return (\n        <div className=\"card\" key={props.card._id} id={props.card._id}>\n            <button type=\"button\" className={`card__delete ${!isOwn && 'card__delete card__delete_invisible'}`}\n                    onClick={handleCardDelete}></button>\n            <img onClick={handleClick} data-name=\"\" className=\"card__item\" src={props.card.link}\n                 alt={props.card.name}/>\n            <div className=\"card__text\">\n                <h3 className=\"card__header\">{props.card.name}</h3>\n                <div className=\"card__likes\">\n                    <button type=\"button\" className={`card__heart ${isLiked && 'card__heart card__heart_active'}`}\n                            onClick={handleLikeClick}></button>\n                    <span className=\"card__span-like\">{props.card.likes.length}</span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport plus from \"../images/plus.svg\";\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport Card from \"./Card\";\n\n\nfunction Main(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    return (\n        <>\n            <section className=\"profile\">\n                <img\n                    className=\"profile__avatar\"\n                    alt=\"Аватарка\"\n                    src={currentUser.avatar}\n\n                />\n                <div onClick={props.onEditAvatar} className=\"profile__avatar_hover\"></div>\n                <div className=\"profile__container\">\n                    <div className=\"profile__info\">\n                        <h1 className=\"profile__title\">{currentUser.name}</h1>\n                        <button onClick={props.onEditProfile} className=\"profile__button-small\" type=\"button\"></button>\n                    </div>\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\n                </div>\n                <button className=\"profile__button-large\" type=\"button\">\n                    <img onClick={props.onAddPlace} src={plus} alt=\"Плюс\"/>\n                </button>\n            </section>\n            <section className=\"grid\">\n                {props.cards.map((card) => (\n                    <Card key={card._id} card={card} onCardCick={props.onCardClick} onCardLike={props.onCardLike}\n                          onCardDelete={props.onCardDelete}/>\n                ))}\n            </section>\n\n        </>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport cross from '../images/crest.svg';\n\nfunction PopupWithForm(props) {\n\n    return (\n        <section id={props.name} className={`popup ${props.isOpen && 'popup popup_opened'}`}>\n            <div className=\"popup__container\">\n                <button className=\"popup__button-close\" type=\"button\">\n                    <img className=\"popup__cross\" src={cross} alt=\"Закрыть\" onClick={props.close}/>\n                </button>\n                <h2 className=\"form__heading\">{props.title}</h2>\n                {props.children}\n                <button type=\"submit\" className=\"form__save\" onClick={props.onSubmit}>Сохранить</button>\n\n            </div>\n        </section>\n    );\n}\n\nexport default PopupWithForm;","import React from \"react\";\nimport cross from '../images/crest.svg';\n\nfunction ImagePopup(props) {\n    return (\n        <section className={`popup ${props.isOpen && 'popup popup_opened'}`} id=\"picture-big\">\n            <div className=\"popup__enlargement\">\n                <button\n                    onClick={props.onClose}\n                    className=\"popup__button-close popup__button-close_big\"\n                    type=\"button\"\n                >\n                    <img className=\"popup__cross\" src={cross} alt=\"Закрыть\"/>\n                </button>\n\n                <img className=\"popup__item\" src={props.image.link} alt={props.image.name}/>\n                <h3 className=\"popup__name\">{props.image.name}</h3>\n            </div>\n        </section>\n    );\n}\nexport default ImagePopup;","import React from 'react';\n\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\n\nfunction EditAvatarPopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const avatarRef = React.useRef();\n\n    React.useEffect(() => {\n        avatarRef.current.value = currentUser.avatar;\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n                avatar: avatarRef.current.value\n            }\n        );\n    }\n\n\n\n    return (\n\n        <PopupWithForm name={'avatar'} title={'Обновить аватар'} buttonText={'Сохранить'} onSubmit={handleSubmit}\n                       children={<form className=\"form form-add\" name=\"form\" method=\"post\" action=\"#\">\n                           <fieldset className=\"form__subject\">\n                               <input\n                                   ref={avatarRef}\n                                   className=\"text-form text-form_subject place-form_link text-form__avatar\"\n                                   type=\"url\"\n                                   name=\"link\"\n                                   id=\"link-avatar\"\n                                   required\n                                   placeholder=\"Ссылка на картинку\"\n                               />\n                           </fieldset>\n                           <span id=\"link-avatar-error\" className=\"form__error\"></span>\n                       </form>}\n                       isOpen={props.isOpen} close={props.onClose}/>\n    );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\n\nfunction EditProfilePopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            name: name,\n            about: description\n        });\n    }\n\n\n    function handleNameChange(e) {\n        setName(e.target.value);\n    }\n\n    function handleDescriptionChange(e) {\n        setDescription(e.target.value);\n\n    }\n\n    return (\n        <PopupWithForm name={'information'} title={'Редактировать профиль'} buttonText={'Сохранить'}\n                       onSubmit={handleSubmit}\n                       isOpen={props.isOpen} close={props.onClose} children={<form\n            className=\"form\"\n            id=\"formname\"\n            name=\"form\"\n            method=\"post\"\n            action=\"#\"\n            noValidate\n        >\n            <fieldset className=\"form__name\">\n                <input\n                    className=\"text-form text-form_name\"\n                    type=\"text\"\n                    value={name || ''}\n                    name=\"name\"\n                    id=\"name-input\"\n                    required\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\n                    minLength=\"2\"\n                    maxLength=\"40\"\n                    onChange={handleNameChange}\n                />\n            </fieldset>\n            <span id=\"name-input-error\" className=\"form__error\"></span>\n            <fieldset className=\"form__subject\">\n                <input\n                    className=\"text-form text-form_subject\"\n                    type=\"text\"\n                    name=\"link\"\n                    value={description || ''}\n                    id=\"profession\"\n                    required\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\n                    minLength=\"2\"\n                    maxLength=\"200\"\n                    onChange={handleDescriptionChange}\n                />\n            </fieldset>\n            <span id=\"profession-error\" className=\"form__error\"></span>\n        </form>}\n        />\n\n    );\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\n\nfunction AddPlacePopup(props) {\n    const inputName = React.useRef();\n    const inputLink = React.useRef();\n\n\n    function handleAddPlaceSubmit(e) {\n        e.preventDefault();\n        props.onUpdatePlace({\n            name: inputName.current.value,\n            link: inputLink.current.value\n        });\n    }\n\n\n\n    return (\n        <PopupWithForm name={'picture-add'} title={'Новое место'} buttonText={'Сохранить'}\n                       onSubmit={handleAddPlaceSubmit}\n                       isOpen={props.isOpen} close={props.onClose}\n                       children={<form className=\"form form-add\" name=\"form\" method=\"post\" action=\"#\">\n                           <fieldset className=\"form__name\">\n                               <input\n                                   className=\"text-form text-form_name place-form_name\"\n                                   type=\"text\"\n                                   name=\"name\"\n                                   defaultValue={''}\n                                   id=\"name-place\"\n                                   required\n                                   pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\n                                   minLength=\"1\"\n                                   maxLength=\"30\"\n                                   placeholder=\"Название\"\n                                   ref={inputName}\n                               />\n                           </fieldset>\n                           <span id=\"name-place-error\" className=\"form__error\"></span>\n                           <fieldset className=\"form__subject\">\n                               <input\n                                   className=\"text-form text-form_subject place-form_link\"\n                                   type=\"url\"\n                                   name=\"link\"\n                                   defaultValue={''}\n                                   id=\"link-place\"\n                                   required\n                                   placeholder=\"Ссылка на картинку\"\n                                   ref={inputLink}\n                               />\n                           </fieldset>\n                           <span id=\"link-place-error\" className=\"form__error\"></span>\n                       </form>}\n        />\n\n    );\n}\n\nexport default AddPlacePopup;","export const token = {\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n    headers: {\n        authorization: 'a737011d-02cf-4531-980a-f0cf56195ed9',\n        'Content-Type': 'application/json'\n    },\n};\n\nclass Api {\n    constructor(options) {\n        this.baseUrl = options.baseUrl;\n        this.headers = options.headers;\n    }\n\n    getUserInfo() {\n        return fetch(`${this.baseUrl}/users/me`, {\n            headers: this.headers,\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`error${res.status}`);\n            });\n    }\n\n    getInitialCards() {\n        return fetch(`${this.baseUrl}/cards`, {\n            headers: this.headers,\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`error${res.status}`);\n            });\n    }\n\n    updateUserInfo(userName, userJob) {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: userName,\n                about: userJob,\n            }),\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`error${res.status}`);\n            });\n    }\n\n    addNewCard(cardName, cardLink) {\n        return fetch(`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: cardName,\n                link: cardLink,\n            }),\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`error${res.status}`);\n            });\n    }\n\n\n    deleteCard(id) {\n        return fetch(`${this.baseUrl}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this.headers,\n\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`error${res.status}`);\n            });\n\n    };\n\n\n    putLike(cardId) {\n\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this.headers\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n            })\n            .then((data) => data);\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n            })\n            .then((data) => data);\n    }\n\n    setUserAvatar(userAvatar) {\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n                method: 'PATCH',\n                headers: this.headers,\n                body: JSON.stringify({\n                    avatar: `${userAvatar.avatar}`\n                })\n            }\n        )\n\n\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n            })\n\n    }\n}\n\nconst api = new Api(token);\nexport default api;","import React from 'react';\nimport './App.css';\nimport Header from \"./Header.js\";\nimport Footer from \"./Footer.js\";\nimport Main from \"./Main.js\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport api from \"../utils/Api\";\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, cards]) => {\n                setCurrentUser(user);\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    const [dataImage, setDataImage] = React.useState({\n        link: '',\n        name: ''\n    });\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleCardClick(props) {\n        setSelectedCard(true);\n        setDataImage({link: props.link, name: props.name});\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        if (isLiked) {\n            api.deleteLike(card._id, isLiked).then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                // Обновляем стейт\n                setCards(newCards)\n\n            })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            api.putLike(card._id, !isLiked).then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                // Обновляем стейт\n                setCards(newCards)\n\n            })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n    }\n\n\n    function handleCardDelete(card) {\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.deleteCard(card._id).then(() => {\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n            const newCards = cards.filter((c) => c._id !== card._id);\n            // Обновляем стейт\n            setCards(newCards)\n\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleUpdateUser(data) {\n        api.updateUserInfo(data.name, data.about).then((updatedUserData) => {\n            setCurrentUser(updatedUserData);\n            closeAllPopups()\n        })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n    function handleUpdatePlace(data) {\n        api.addNewCard(data.name, data.link).then((newCardData) => {\n            setCards([...cards, newCardData]);\n            closeAllPopups()\n        })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n\n    function handleUpdateAvatar(data) {\n        api.setUserAvatar(data).then((updatedUserData) => {\n            setCurrentUser(updatedUserData);\n            closeAllPopups()\n        })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n\n    return (\n\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header/>\n\n                <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n                      onEditAvatar={handleEditAvatarClick} cards={cards}\n                      onCardLike={handleCardLike} onCardDelete={handleCardDelete} onCardClick={handleCardClick}\n                />\n\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                                 onUpdateAvatar={handleUpdateAvatar}/>\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                                  onUpdateUser={handleUpdateUser}/>\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                               onUpdatePlace={handleUpdatePlace}/>\n\n                <PopupWithForm name={'sure'} title={'Вы уверены?'} buttonText={'Да'}/>\n                <ImagePopup isOpen={selectedCard} onClose={closeAllPopups} image={dataImage}/>\n\n                <Footer/>\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}